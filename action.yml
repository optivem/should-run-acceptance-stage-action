name: 'Should Run Acceptance Stage'
description: 'Determines if acceptance stage should run based on Docker image creation timestamp or force run flag. Accepts Docker inspect JSON data to compare image creation time with last successful workflow run.'
author: 'Optivem'
branding:
  icon: 'check-circle'
  color: 'green'
inputs:
  latest-image-inspect-result:
    description: 'Docker inspect JSON result containing image metadata'
    required: true
  acceptance-stage-repo-owner:
    description: 'Repository owner (organization or username)'
    required: false
    default: ${{ github.repository_owner }}
  acceptance-stage-repo-name:
    description: 'Repository name'
    required: false
    default: ${{ github.event.repository.name }}
  acceptance-stage-workflow-name:
    description: 'Name of the acceptance stage workflow'
    required: false
    default: 'acceptance-stage'
  force-run:
    description: 'Force run even if no new images (bypasses image detection)'
    required: false
    default: 'false'
outputs:
  should-run:
    description: 'Whether the acceptance stage should run (true/false)'
    value: ${{ steps.check.outputs.should-run }}
  reason:
    description: 'Reason why acceptance stage should or should not run'
    value: ${{ steps.check.outputs.reason }}
  latest-commit:
    description: 'Latest commit SHA'
    value: ${{ steps.check.outputs.latest-commit }}
  latest-image-id:
    description: 'Latest image ID if new image is available'
    value: ${{ steps.check.outputs.latest-image-id }}
  latest-image-created-at:
    description: 'Latest image creation timestamp'
    value: ${{ steps.check.outputs.latest-image-created-at }}
  new-images-count:
    description: 'Number of new images found'
    value: ${{ steps.check.outputs.new-images-count }}
  error-message:
    description: 'Error message if check failed'
    value: ${{ steps.check.outputs.error-message }}
runs:
  using: 'composite'
  steps:
    - name: Check if acceptance stage should run
      id: check
      shell: pwsh
      run: |
        & "${{ github.action_path }}/action.ps1" `
          -RepoOwner "${{ inputs.acceptance-stage-repo-owner }}" `
          -RepoName "${{ inputs.acceptance-stage-repo-name }}" `
          -InspectDataResult "${{ inputs.latest-image-inspect-result }}" `
          -WorkflowName "${{ inputs.acceptance-stage-workflow-name }}" `
          -ForceRun ([System.Convert]::ToBoolean("${{ inputs.force-run }}"))
      env:
        GITHUB_TOKEN: ${{ github.token }}
        GITHUB_SHA: ${{ github.sha }}